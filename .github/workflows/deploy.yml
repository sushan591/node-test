# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js deploy to test environment

on:
    push:
        branches: [role_added]

jobs:
    build:
        runs-on: self-hosted

        strategy:
            matrix:
                node-version: [16.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - run: |
                if [-d uploads/]; then
                  cp -r uploads/ /var/www/html/
                fi
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
            - run: rm -rf node_modules
            - run: yarn install
            - name: "Make .env file"
              run: |
                touch .env
                echo APP_HOST=${{ secrets.APP_HOST }} >> .env
                echo APP_NAME=${{ secrets.APP_NAME }} >> .env
                echo APP_PORT=${{ secrets.APP_PORT }} >> .env
                echo APP_VERSION=${{ secrets.APP_VERSION }} >> .env
                echo APP_PER_PAGE=${{ secrets.APP_PER_PAGE }} >> .env
                echo DB_HOST=${{ secrets.DB_HOST }} >> .env
                echo DB_NAME=${{ secrets.DB_NAME }} >> .env
                echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
                echo DB_PORT=${{ secrets.DB_PORT }} >> .env
                echo DB_USER=${{ secrets.DB_USER }} >> .env
                echo JWT_ENCRYPTION=${{ secrets.JWT_ENCRYPTION }} >> .env
                echo JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} >> .env
                echo LOG_LEVEL=${{ secrets.LOG_LEVEL }} >> .env
            - run: |
                if [-d /var/www/html/uploads]; then
                  cp -r /var/www/html/uploads/* uploads/
                fi
            - run: docker compose stop && docker compose up -d --build
            - run: docker exec node-svc yarn migrate
            - run: docker exec node-svc yarn seed